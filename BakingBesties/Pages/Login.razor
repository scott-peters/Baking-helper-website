@page "/login"

@using System.ComponentModel.DataAnnotations
@inject NavigationManager NavigationManager

<style>
    .nav-item {
        padding-right: 20px
    }

    .form-inline {
        position: absolute;
        padding-right: 10px;
        right: 0px;
    }

    .button {
        border: none;
        color: white;
        padding: 16px 32px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        margin: 4px 2px;
        transition-duration: 0.4s;
        cursor: pointer;
    }

    .button1 {
        background-color: white;
        color: black;
        border: 2px solid #4CAF50;
    }

        .button1:hover {
            background-color: #4CAF50;
            color: white;
        }

    .button2 {
        background-color: white;
        color: black;
        border: 2px solid #008CBA;
    }

        .button2:hover {
            background-color: #008CBA;
            color: white;
        }

    .parent {
        display: table;
        width: 100%;
    }
    /* got how to center from here
            https://stackoverflow.com/questions/22658141/css-center-form-in-page-horizontally-and-vertically
        */
    #form_login {
        left: 57%;
        top: 40%;
        position: absolute;
        transform: translate(-50%, -50%);
    }

    /*
            Hover text from here. doesnt work exactly how I want but oh well
            https://stackoverflow.com/questions/14263594/how-to-show-text-on-image-when-hovering
        */
    .overlay {
        position: relative;
        height: 70px;
        width: 70px;
    }

    .hover_text {
        position: absolute;
        top: 20%;
        bottom: 0;
        left: 20%;
        right: 0;
        background: #808080;
        color: #fff;
        visibility: hidden;
        opacity: 0.4;
        /* transition effect. not necessary */
        transition: opacity .2s, visibility .2s;
    }

    .overlay:hover .hover_text {
        visibility: visible;
        opacity: 0.4;
    }

    .error-message {
        color: red;
    }
</style>


<div align="center">

    <img src="bblogo.png" alt="Baking Besties" width="200" height="150" />

</div>

<div align="center">
    <h2>Login</h2>
</div>

@if (!string.IsNullOrEmpty(errorMessage))
{

    <div align="center" class="error-message">@errorMessage</div>
}

<div align="center">
    <EditForm Model="@loginModel" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <label for="username">Username:</label>
            <InputText id="username" placeholder="Username" @bind-Value="loginModel.Username" />
        </div>

        <div>
            <label for="password">Password:</label>
            <InputText id="password" placeholder="Password" @bind-Value="loginModel.Password" type="password" />
        </div>

        <button type="submit" class="button button2">Login</button>
        <a href="register">New? Signup</a>
    </EditForm>
</div>



@code {

    // Patched this together from many google searches
    // https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.components.authorization.authenticationstateprovider?view=aspnetcore-7.0
    // https://dev.to/jamattey/guide-create-a-login-page-in-5-minutes-using-blazorise-components-part-one-219f
    // https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.components.navigationmanager.navigateto?view=aspnetcore-7.0
    private LoginModel loginModel = new LoginModel();

    string errorMessage = "";

    public bool IsLoggedIn { get; set; } = false;

    private void HandleValidSubmit()
    {
        // Here, you can perform your authentication logic.
        // If the authentication is successful, redirect to the home page.
        // Otherwise, show an error message.

        if (loginModel.Username == "test" && loginModel.Password == "password")
        {
            IsLoggedIn = true;
            NavigationManager.NavigateTo("/profile");
        }
        else
        {
            // Show an error message
            errorMessage = "Invalid username or password.";
        }
    }

    private class LoginModel
    {
        [Required(ErrorMessage = "Username is required.")]
        public string Username { get; set; }

        [Required(ErrorMessage = "Password is required.")]
        public string Password { get; set; }
    }
}


